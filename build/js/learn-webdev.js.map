{"version":3,"sources":["learn-webdev.js"],"names":["getOffsetTop","el","offset","offsetParent","getOffsetBottom","offsetHeight","insertSectionAnchors","i","sections","length","hash","encodeURIComponent","textContent","toLowerCase","replace","createElement","anchor","insertBefore","firstChild","update","vpTop","window","pageYOffset","vpBottom","innerHeight","h2","querySelector","id","classList","add","remove","undefined","currentHash","location","replaceState","document","querySelectorAll","addEventListener"],"mappings":"YAIA,SAASA,cAAaC,MAChBC,GAAS,KADfD,EAASD,mBAEAG,EAAAA,gBACFF,EAAAA,EAAAE,oBAAHD,GAQJ,QAASE,iBAAgBH,SAChBD,cAAaC,GAAMA,EAAGI,aAI/B,QAASC,4BACF,GAAIC,GAAI,EAAGA,EAAIC,SAASC,OAAQF,IAAK,IADnCD,GAAAA,SAAAA,GACFI,EAALC,mBAA6BF,EAAQF,cAAK,MAAAK,YAAAC,cAAAC,QAAA,IAAA,MAClCb,EAAKO,SAAXO,cAAA,OACML,UAAOC,mBACPK,GAAAA,IAGHC,aAFHD,EAAmBf,EAAAiB,aAMvB,QAASC,cAGHT,GAFEU,GAAQC,OAAOC,YADvBC,EAAkBH,EAAAC,OAAAG,YACVJ,EAAAA,GAEFV,EAAJ,EAAAH,EAAAC,SAAAC,OAAAF,IAAA,IAGQN,GAAKO,SAASD,GADjBkB,EAAQxB,EAAGM,cAAaE,KAKvBT,cAAaC,IAAOmB,MACf,IAAMnB,EAAGyB,cAAc,mBAAmBC,IAK/CvB,gBAAgBH,GAAMwB,EAAGpB,aAAee,GAAShB,gBAAgBH,GAAMsB,IACtEK,UAAUC,IAAI,kBAGV7B,aAAaC,GAAMmB,GAAShB,gBAAgBH,GAAMsB,IACtDK,UAAUC,IAAI,oBAEdD,UAFAA,OAAc,oBAMhBA,UAAUE,OAAO,iBACjBF,UAAUE,OAAO,aAGhB9B,aAAaC,GAAMmB,GAAShB,gBAAgBH,GAAMwB,EAAGpB,aAAe,EAAIe,IACvEQ,UAAUC,IAAI,eADf7B,aAAmBoB,GAAnBA,KACCQ,UAAUC,IAAI,aAOFE,QAAfC,wBACYX,OAAOY,SAASvB,KAD5BsB,cAAeD,YAGTG,aAFaD,KAAAA,GAArB,IAA8BvB,EAA9B,KAAAA,eACSsB,GAxEb,GAAMxB,UAAW2B,SAASC,iBAAiB,WACvCJ,YAAAA,MA+EAxB,UAASC,kBAATD,iBAAiB,SAAAW,eAEZkB,iBADEA,SAATlB","file":"learn-webdev.js","sourcesContent":["const sections = document.querySelectorAll('section');\r\nlet currentHash;\r\n\r\n// Y coord of the top of an element relative to the top of the document\r\nfunction getOffsetTop(el) {\r\n  let offset = 0;\r\n  if (el.offsetParent) {\r\n    do {\r\n      offset += el.offsetTop;\r\n    } while (el = el.offsetParent);\r\n  }\r\n  return offset;\r\n}\r\n\r\n// Y coord of the bottom of an element relative to the top of the document\r\nfunction getOffsetBottom(el) {\r\n  return getOffsetTop(el) + el.offsetHeight;\r\n}\r\n\r\n// Creates anchor elements for each section based on the section title (<h2>)\r\nfunction insertSectionAnchors() {\r\n  for (let i = 0; i < sections.length; i++) {\r\n    const el = sections[i];\r\n    const hash = encodeURIComponent(el.querySelector('h2').textContent.toLowerCase().replace(' ', '-'));\r\n    const anchor = document.createElement('a');\r\n    anchor.className = 'section-anchor';\r\n    anchor.id = hash;\r\n    el.insertBefore(anchor, el.firstChild);\r\n  }\r\n}\r\n\r\nfunction update() {\r\n  const vpTop = window.pageYOffset;\r\n  const vpBottom = vpTop + window.innerHeight;\r\n  let hash = '';\r\n\r\n  for (let i = 0; i < sections.length; i++) {\r\n    const el = sections[i];\r\n    const h2 = el.querySelector('h2');\r\n\r\n    // Determine hash\r\n    if (getOffsetTop(el) <= vpTop) {\r\n      hash = '#' + el.querySelector('.section-anchor').id;\r\n    }\r\n\r\n    // \"Raise\" sections in viewport\r\n    // If the section's <h2> and bottom edge are in the viewport, raise it\r\n    if (getOffsetBottom(el) - h2.offsetHeight > vpTop && getOffsetBottom(el) < vpBottom) {\r\n      el.classList.add('section-raised');\r\n    }\r\n    // If the section is filling the entire viewport, raise it\r\n    else if (getOffsetTop(el) < vpTop && getOffsetBottom(el) > vpBottom) {\r\n      el.classList.add('section-raised');\r\n    } else {\r\n      el.classList.remove('section-raised');\r\n    }\r\n\r\n    // Clear existing <h2> modifiers\r\n    h2.classList.remove('h2-floating');\r\n    h2.classList.remove('h2-bottom');\r\n\r\n    // \"Float\" <h2> in active section\r\n    if (getOffsetTop(el) < vpTop && getOffsetBottom(el) - h2.offsetHeight - 2 > vpTop) {\r\n      h2.classList.add('h2-floating');\r\n    } else if (getOffsetTop(h2) < vpTop) {\r\n      h2.classList.add('h2-bottom');\r\n    }\r\n  }\r\n\r\n  // Update URL with active section hash\r\n  if (currentHash == undefined) {\r\n    currentHash = window.location.hash;\r\n  } else if (currentHash !== hash) {\r\n    history.replaceState(null, '', hash == '' ? './' : hash);\r\n    currentHash = hash;\r\n  }\r\n}\r\n\r\n\r\n// If we have at least one section, hook everything up\r\nif (sections.length) {\r\n  document.addEventListener('scroll', update);\r\n  window.addEventListener('resize', update);\r\n\r\n  insertSectionAnchors();\r\n  update();\r\n}\r\n"],"sourceRoot":"/source/"}